{"version":3,"sources":["webpack:///./src/index.js"],"names":["App","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","state","todo","value","visibility","currentTask","handleKeyPress","bind","addTask","handleChange","setTodo","setVisibility","deleteTask","setEnterTaskArea","react__WEBPACK_IMPORTED_MODULE_1__","newTaskList","task","id","length","push","setState","e","slice","splice","currentTarget","dataset","console","log","map","item","index","assign","key","_this2","todoTasks","filter","category","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","onClick","data-visibility","className","todos","data-id","trim","onMouseEnter","onMouseLeave","htmlFor","type","onChange","checked","placeholder","onKeyPress","disabled","react_dom__WEBPACK_IMPORTED_MODULE_2___default","render","document","getElementById"],"mappings":"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","file":"main.4c50.js","sourcesContent":["import \"./style/main.scss\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            todo: [],\n            value: \"\",\n            visibility: -1,\n            currentTask: null\n        };\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n        this.addTask = this.addTask.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.setTodo = this.setTodo.bind(this);\n        this.setVisibility = this.setVisibility.bind(this);\n        this.deleteTask = this.deleteTask.bind(this);\n        this.setEnterTaskArea = this.setEnterTaskArea.bind(this);\n    }\n    addTask() {\n        let newTaskList = this.state.todo;\n        let task = {\n            id: newTaskList.length,\n            state: false,\n            value: this.state.value\n        };\n        newTaskList.push(task);\n        this.setState({\n            value: \"\",\n            todo: newTaskList,\n            visibility: this.state.visibility === 1 ? -1 : this.state.visibility\n        });\n    }\n    deleteTask(e) {\n        let newTaskList = this.state.todo.slice();\n        newTaskList.splice(e.currentTarget.dataset.id, 1);\n        console.log(\n            \"after delete\",\n            newTaskList.map((item, index) => Object.assign(item, { id: index }))\n        );\n\n        this.setState({\n            todo: newTaskList.map((item, index) =>\n                Object.assign(item, { id: index })\n            )\n        });\n    }\n    setTodo(e) {\n        let newTaskList = this.state.todo;\n        newTaskList[e.currentTarget.dataset.id].state = !newTaskList[\n            e.currentTarget.dataset.id\n        ].state;\n        this.setState({\n            todo: newTaskList\n        });\n    }\n    setEnterTaskArea(e) {\n        console.log(e.currentTarget);\n        console.log(e.currentTarget.dataset.id);\n        this.setState({\n            currentTask: e.currentTarget.dataset.id\n        });\n    }\n    handleKeyPress(e) {\n        if (e.key === \"Enter\") {\n            this.addTask();\n        }\n    }\n    handleChange(e) {\n        this.setState({\n            value: e.currentTarget.value\n        });\n    }\n    setVisibility(e) {\n        this.setState({\n            visibility: +e.currentTarget.dataset.visibility\n        });\n    }\n    render() {\n        console.log(this.state);\n\n        let todolist = this.state.todo;\n\n        // let sorted = Object.keys(todolist).sort((a, b) => +b.state - +a.state);\n\n        let todoTasks = this.state.todo.filter(task => {\n            return +this.state.visibility >= 0\n                ? +task.state === +this.state.visibility\n                : true;\n        });\n\n        let category = [\"All\", \"Todos\", \"Done\"].map((item, index) => {\n            return (\n                <li\n                    key={`group-${index}`}\n                    onClick={this.setVisibility}\n                    data-visibility={`${index - 1}`}\n                    className={\n                        +this.state.visibility === index - 1 ? \"active\" : \"\"\n                    }\n                >\n                    <b>{item}</b>\n                    <div className=\"border-line\" />\n                </li>\n            );\n        });\n\n        let todos = todoTasks.map(item => {\n            return (\n                <div\n                    data-id={item.id}\n                    className={(\n                        \"task \" + (item.state ? \"completed-task\" : \"new-task\")\n                    ).trim()}\n                    key={item.id}\n                    onMouseEnter={this.setEnterTaskArea}\n                    onMouseLeave={this.setEnterTaskArea}\n                >\n                    <span />\n                    <div>\n                        <label\n                            className=\"checkbox-wrapper\"\n                            htmlFor={`task-${item.id}`}\n                        >\n                            {item.value}\n                            <input\n                                id={`task-${item.id}`}\n                                type=\"checkbox\"\n                                data-id={item.id}\n                                onChange={this.setTodo}\n                                checked={+item.state > 0}\n                            />\n                            <span className=\"checkmark\" />\n                        </label>\n                    </div>\n                    <button\n                        data-id={item.id}\n                        className={`remove ${\n                            this.state.currentTask &&\n                            this.state.currentTask == item.id\n                                ? \"show\"\n                                : \"\"\n                        }`}\n                        onClick={this.deleteTask}\n                    >\n                        x\n                    </button>\n                </div>\n            );\n        });\n\n        return (\n            <div>\n                <nav>{category}</nav>\n                <div className=\"add-section\">\n                    <input\n                        placeholder=\"Add a new task\"\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                        onKeyPress={this.handleKeyPress}\n                        type=\"text\"\n                    />\n                    <button\n                        onClick={this.addTask}\n                        disabled={!this.state.value.length}\n                    >\n                        <span>+</span>\n                    </button>\n                </div>\n                <div className=\"task-list\">{todos}</div>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.getElementById(\"main\"));\n"],"sourceRoot":""}